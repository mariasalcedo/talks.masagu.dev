---
name: ci

"on":
  - pull_request_target
  - push

permissions: write-all

env:
  NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_TOKEN }}
  NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Repository Checkout
        uses: actions/checkout@v4
        
      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          
      - name: Install Netlify
        run: npm install netlify-cli@17.10.1 -g
      - name: Install Dependencies
        run: npm ci
        
      - name: Build project
        run: npm run build
        
      - uses: actions/cache@v4
        with:
          path: |
            **/public
            **/resources
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - uses: actions/setup-node@v4

      - name: Install yarn command
        uses: borales/actions-yarn@v5
        with:
          cmd: install

      - name: Build slides
        run: |
          for slide in $(ls ./slides); do

             echo "######################"
             echo "### Build ${slide} ###"       
             echo "######################"
             yarn slidev build "slides/${slide}/slides.md" --out "../../dist/${slide}" --base "/${slide}"
          done 

      - name: Deploy to Netlify (dev)
        if: github.ref != 'refs/heads/main'
        id: netlify_deploy_dev
        run: |
          prod_flag=""
          if [ "$BRANCH_NAME" = "main" ]; then prod_flag="--prod"; fi
          netlify deploy \
            --dir dist \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_TOKEN }}

      - name: Deploy to Netlify (prod)
        if: github.ref == 'refs/heads/main'
        id: netlify_deploy_prod
        run: |
          netlify deploy \
            --dir dist \
            --site ${{ secrets.NETLIFY_SITE_ID }} \
            --auth ${{ secrets.NETLIFY_TOKEN }} \
            --prod
